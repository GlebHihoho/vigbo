{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./components/Templates/index.jsx","webpack:///./components/Templates/Vehicles.jsx","webpack:///./components/Templates/Starships.jsx","webpack:///./components/Templates/Species.jsx","webpack:///./components/Templates/Planets.jsx","webpack:///./components/Templates/People.jsx","webpack:///./components/Templates/Films.jsx","webpack:///./helpers/index.js","webpack:///./model/entityListModel.js","webpack:///./constants/index.js","webpack:///./components/common/Loader.jsx","webpack:///./components/Header/Header.jsx","webpack:///./components/EntityList/EntityList.jsx","webpack:///./components/Pagination/Pagination.jsx","webpack:///./components/Entity/Entity.jsx","webpack:///./index.jsx","webpack:///./components/common/templateContainers.jsx","webpack:///./App.jsx","webpack:///./components/Header/index.js","webpack:///./components/EntityList/index.js","webpack:///./model/entityTypeModel.js","webpack:///./dal/index.js","webpack:///./components/Pagination/index.js","webpack:///./components/Entity/index.js","webpack:///./model/entityModel.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_constants","entityKeys","vehicles","getTemplate","props","_react2","default","createElement","_Vehicles2","starships","_Starships2","species","_Species2","planets","_Planets2","people","_People2","films","_Films2","_react","_templateContainers","vehicle_class","consumables","cost_in_credits","cargo_capacity","crew","manufacturer","max_atmosphering_speed","model","passengers","pilots","Container","Row","Title","Value","Links","MGLT","hyperdrive_rating","starship_class","average_height","average_lifespan","classification","designation","eye_colors","hair_colors","homeworld","language","skin_colors","climate","diameter","gravity","orbital_period","population","residents","rotation_period","surface_water","terrain","birth_year","eye_color","gender","hair_color","height","mass","skin_color","characters","director","episode_id","opening_crawl","producer","release_date","title","getId","string","match","__webpack_exports__","$entityList","$isLoadingEntityList","$nextPage","$prevPage","fetchEntityList","changePage","resetStore","effector_es","_fetchEntityList","use","page","entityType","entityTypeModel","getState","dal","getEntityList","then","response","results","next","previous","list","map","el","id","url","prev","watch","on","done","_","fail","reset","entities","styled","div","_templateObject","_reactRouterDom","_entityTypeModel","withRouter","pathname","location","useEffect","split","setEntityType","List","item","NavLinkWrap","to","activeClassName","_styledComponents2","NavLink","_templateObject2","_effectorReact","_entityListModel","_ref","entityList","useStore","isLoadingEntityList","nextPage","prevPage","_Loader2","Fragment","entity","Item","Link","_Pagination2","_templateObject3","Button","type","onClick","disabled","button","_entityModel","params","$entity","$entityType","isLoadingEntity","$isLoadingEntity","fetchEntity","templates","ReactDOM","render","_App2","document","getElementById","filmsContent","element","_uniqueId2","_isEmpty2","_templateObject4","_styledComponents","MainContainer","HashRouter","_Header2","MainContent","Switch","Route","path","component","EntityList","exact","Entity","Redirect","from","GlobalStyle","createGlobalStyle","_Header__WEBPACK_IMPORTED_MODULE_0__","_Header__WEBPACK_IMPORTED_MODULE_0___default","_EntityList__WEBPACK_IMPORTED_MODULE_0__","_EntityList__WEBPACK_IMPORTED_MODULE_0___default","effector__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","URL","a","getEntityById","getEntityByUrl","_Pagination__WEBPACK_IMPORTED_MODULE_0__","_Pagination__WEBPACK_IMPORTED_MODULE_0___default","_Entity__WEBPACK_IMPORTED_MODULE_0__","_Entity__WEBPACK_IMPORTED_MODULE_0___default","lodash_isArray__WEBPACK_IMPORTED_MODULE_1__","lodash_isArray__WEBPACK_IMPORTED_MODULE_1___default","lodash_isEmpty__WEBPACK_IMPORTED_MODULE_2__","lodash_isEmpty__WEBPACK_IMPORTED_MODULE_2___default","_dal__WEBPACK_IMPORTED_MODULE_3__","_constants__WEBPACK_IMPORTED_MODULE_4__","_entityTypeModel__WEBPACK_IMPORTED_MODULE_5__","_fetchEntity","propsWithDeficiencyData","requests","keys","filter","forEach","Promise","all","responses","rest","prop","res","assign"],"mappings":"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","file":"main.de27d0a86050341f9d25.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([57,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import React from 'react';\n\nimport Vehicles from './Vehicles';\nimport Starships from './Starships';\nimport Species from './Species';\nimport Planets from './Planets';\nimport People from './People';\nimport Films from './Films';\n\nimport { entityKeys } from '../../constants';\n\nexport default {\n  [entityKeys.vehicles]: {\n    getTemplate: props => <Vehicles {...props} />,\n  },\n  [entityKeys.starships]: {\n    getTemplate: props => <Starships {...props} />,\n  },\n  [entityKeys.species]: {\n    getTemplate: props => <Species {...props} />,\n  },\n  [entityKeys.planets]: {\n    getTemplate: props => <Planets {...props} />,\n  },\n  [entityKeys.people]: {\n    getTemplate: props => <People {...props} />,\n  },\n  [entityKeys.films]: {\n    getTemplate: props => <Films {...props} />,\n  },\n};\n","import React from 'react';\n\nimport {\n  Container,\n  Row,\n  Title,\n  Value,\n  Links,\n} from '../common/templateContainers';\n\nconst Vehicles = (props) => {\n  const {\n    name,\n    vehicle_class,\n    consumables,\n    cost_in_credits,\n    cargo_capacity,\n    crew,\n    length,\n    manufacturer,\n    max_atmosphering_speed,\n    model,\n    passengers,\n    pilots,\n    films,\n  } = props;\n\n  return (\n    <Container>\n      <Row>\n        <Title>Name:</Title>\n        <Value>{name}</Value>\n      </Row>\n\n      <Row>\n        <Title>Class</Title>\n        <Value>{vehicle_class}</Value>\n      </Row>\n\n      <Row>\n        <Title>Consumables:</Title>\n        <Value>{consumables}</Value>\n      </Row>\n\n      <Row>\n        <Title>Cost in credits:</Title>\n        <Value>{cost_in_credits}</Value>\n      </Row>\n\n      <Row>\n        <Title>Crew:</Title>\n        <Value>{crew}</Value>\n      </Row>\n\n      <Row>\n        <Title>Length:</Title>\n        <Value>{length}</Value>\n      </Row>\n\n      <Row>\n        <Title>Manufacturer:</Title>\n        <Value>{manufacturer}</Value>\n      </Row>\n\n      <Row>\n        <Title>Max atmosphering speed:</Title>\n        <Value>{max_atmosphering_speed}</Value>\n      </Row>\n\n      <Row>\n        <Title>Model:</Title>\n        <Value>{model}</Value>\n      </Row>\n\n      <Row>\n        <Title>Passengers:</Title>\n        <Value>{passengers}</Value>\n      </Row>\n\n      <Row>\n        <Title>Cargo capacity:</Title>\n        <Value>{cargo_capacity}</Value>\n      </Row>\n\n      <Row>\n        <Title>Pilots:</Title>\n        <Value>\n          <Links data={pilots} />\n        </Value>\n      </Row>\n\n      <Row>\n        <Title>Films:</Title>\n        <Value>\n          <Links data={films} />\n        </Value>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Vehicles;\n","import React from 'react';\n\nimport {\n  Container,\n  Row,\n  Title,\n  Value,\n  Links,\n} from '../common/templateContainers';\n\nconst Starships = (props) => {\n  const {\n    MGLT,\n    cargo_capacity,\n    consumables,\n    cost_in_credits,\n    crew,\n    films,\n    hyperdrive_rating,\n    length,\n    manufacturer,\n    max_atmosphering_speed,\n    model,\n    name,\n    passengers,\n    starship_class,\n  } = props;\n\n  return (\n    <Container>\n      <Row>\n        <Title>Name:</Title>\n        <Value>{name}</Value>\n      </Row>\n\n      <Row>\n        <Title>Class:</Title>\n        <Value>{starship_class}</Value>\n      </Row>\n\n      <Row>\n        <Title>Consumables:</Title>\n        <Value>{consumables}</Value>\n      </Row>\n\n      <Row>\n        <Title>Cost in credits:</Title>\n        <Value>{cost_in_credits}</Value>\n      </Row>\n\n      <Row>\n        <Title>Crew:</Title>\n        <Value>{crew}</Value>\n      </Row>\n\n      <Row>\n        <Title>Length:</Title>\n        <Value>{length}</Value>\n      </Row>\n\n      <Row>\n        <Title>Manufacturer:</Title>\n        <Value>{manufacturer}</Value>\n      </Row>\n\n      <Row>\n        <Title>Max atmosphering speed:</Title>\n        <Value>{max_atmosphering_speed}</Value>\n      </Row>\n\n      <Row>\n        <Title>Model:</Title>\n        <Value>{model}</Value>\n      </Row>\n\n      <Row>\n        <Title>Passengers:</Title>\n        <Value>{passengers}</Value>\n      </Row>\n\n      <Row>\n        <Title>Cargo capacity:</Title>\n        <Value>{cargo_capacity}</Value>\n      </Row>\n\n      <Row>\n        <Title>Hyperdrive Rating:</Title>\n        <Value>{hyperdrive_rating}</Value>\n      </Row>\n\n      <Row>\n        <Title>MGLT:</Title>\n        <Value>{MGLT}</Value>\n      </Row>\n\n      <Row>\n        <Title>Films:</Title>\n        <Value>\n          <Links data={films} />\n        </Value>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Starships;\n","import React from 'react';\n\nimport {\n  Container,\n  Row,\n  Title,\n  Value,\n  Links,\n} from '../common/templateContainers';\n\nconst Species = (props) => {\n  const {\n    name,\n    average_height,\n    average_lifespan,\n    classification,\n    designation,\n    eye_colors,\n    films,\n    hair_colors,\n    homeworld,\n    language,\n    people,\n    skin_colors,\n  } = props;\n\n  return (\n    <Container>\n      <Row>\n        <Title>Name:</Title>\n        <Value>{name}</Value>\n      </Row>\n\n      <Row>\n        <Title>Average height:</Title>\n        <Value>{average_height}</Value>\n      </Row>\n\n      <Row>\n        <Title>Average lifespan:</Title>\n        <Value>{average_lifespan}</Value>\n      </Row>\n\n      <Row>\n        <Title>Classification:</Title>\n        <Value>{classification}</Value>\n      </Row>\n\n      <Row>\n        <Title>Designation:</Title>\n        <Value>{designation}</Value>\n      </Row>\n\n      <Row>\n        <Title>Eye colors:</Title>\n        <Value>{eye_colors}</Value>\n      </Row>\n\n      <Row>\n        <Title>Hair colors:</Title>\n        <Value>{hair_colors}</Value>\n      </Row>\n\n      <Row>\n        <Title>Homeworld:</Title>\n        <Value>\n          <Links data={homeworld} />\n        </Value>\n      </Row>\n\n      <Row>\n        <Title>Language:</Title>\n        <Value>{language}</Value>\n      </Row>\n\n      <Row>\n        <Title>Skin colors:</Title>\n        <Value>{skin_colors}</Value>\n      </Row>\n\n      <Row>\n        <Title>Films:</Title>\n        <Value>\n          <Links data={films} />\n        </Value>\n      </Row>\n\n      <Row>\n        <Title>Person:</Title>\n        <Value>\n          <Links data={people} />\n        </Value>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Species;\n","import React from 'react';\n\nimport {\n  Container,\n  Row,\n  Title,\n  Value,\n  Links,\n} from '../common/templateContainers';\n\nconst Planets = (props) => {\n  const {\n    name,\n    climate,\n    diameter,\n    films,\n    gravity,\n    orbital_period,\n    population,\n    residents,\n    rotation_period,\n    surface_water,\n    terrain,\n  } = props;\n\n  return (\n    <Container>\n      <Row>\n        <Title>Name:</Title>\n        <Value>{name}</Value>\n      </Row>\n\n      <Row>\n        <Title>Climate:</Title>\n        <Value>{climate}</Value>\n      </Row>\n\n      <Row>\n        <Title>Diameter:</Title>\n        <Value>{diameter}</Value>\n      </Row>\n\n      <Row>\n        <Title>Gravity:</Title>\n        <Value>{gravity}</Value>\n      </Row>\n\n      <Row>\n        <Title>Orbital period:</Title>\n        <Value>{orbital_period}</Value>\n      </Row>\n\n      <Row>\n        <Title>Population:</Title>\n        <Value>{population}</Value>\n      </Row>\n\n      <Row>\n        <Title>Rotation period:</Title>\n        <Value>{rotation_period}</Value>\n      </Row>\n\n      <Row>\n        <Title>Surface water:</Title>\n        <Value>{surface_water}</Value>\n      </Row>\n\n      <Row>\n        <Title>Terrain:</Title>\n        <Value>{terrain}</Value>\n      </Row>\n\n      <Row>\n        <Title>Films:</Title>\n        <Value>\n          <Links data={films} />\n        </Value>\n      </Row>\n\n      <Row>\n        <Title>Person:</Title>\n        <Value>\n          <Links data={residents} />\n        </Value>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Planets;\n","import React from 'react';\n\nimport {\n  Container,\n  Row,\n  Title,\n  Value,\n  Links,\n} from '../common/templateContainers';\n\nconst People = (props) => {\n  const {\n    birth_year,\n    eye_color,\n    films,\n    gender,\n    hair_color,\n    height,\n    mass,\n    name,\n    skin_color,\n    species,\n    starships,\n    vehicles,\n    homeworld,\n  } = props;\n\n  return (\n    <Container>\n      <Row>\n        <Title>Name:</Title>\n        <Value>{name}</Value>\n      </Row>\n\n      <Row>\n        <Title>Birth year:</Title>\n        <Value>{birth_year}</Value>\n      </Row>\n\n      <Row>\n        <Title>Eye color:</Title>\n        <Value>{eye_color}</Value>\n      </Row>\n\n      <Row>\n        <Title>Gender:</Title>\n        <Value>{gender}</Value>\n      </Row>\n\n      <Row>\n        <Title>Hair color:</Title>\n        <Value>{hair_color}</Value>\n      </Row>\n\n      <Row>\n        <Title>Height:</Title>\n        <Value>{height}</Value>\n      </Row>\n\n      <Row>\n        <Title>Mass:</Title>\n        <Value>{mass}</Value>\n      </Row>\n\n      <Row>\n        <Title>Skin color:</Title>\n        <Value>{skin_color}</Value>\n      </Row>\n\n      <Row>\n        <Title>Homeworld:</Title>\n        <Value>\n          <Links data={homeworld} />\n        </Value>\n      </Row>\n\n      <Row>\n        <Title>Films:</Title>\n        <Value>\n          <Links data={films} />\n        </Value>\n      </Row>\n\n      <Row>\n        <Title>Species:</Title>\n        <Value>\n          <Links data={species} />\n        </Value>\n      </Row>\n\n      <Row>\n        <Title>Starships:</Title>\n        <Value>\n          <Links data={starships} />\n        </Value>\n      </Row>\n\n      <Row>\n        <Title>Vehicles:</Title>\n        <Value>\n          <Links data={vehicles} />\n        </Value>\n      </Row>\n    </Container>\n  );\n};\n\nexport default People;\n","import React from 'react';\n\nimport {\n  Container,\n  Row,\n  Title,\n  Value,\n  Links,\n} from '../common/templateContainers';\n\nconst Films = (props) => {\n  const {\n    characters,\n    director,\n    episode_id,\n    opening_crawl,\n    planets,\n    producer,\n    release_date,\n    species,\n    starships,\n    title,\n    vehicles,\n  } = props;\n\n  return (\n    <Container>\n      <Row>\n        <Title>Title:</Title>\n        <Value>{title}</Value>\n      </Row>\n\n      <Row>\n        <Title>Director:</Title>\n        <Value>{director}</Value>\n      </Row>\n\n      <Row>\n        <Title>Producer:</Title>\n        <Value>{producer}</Value>\n      </Row>\n\n      <Row>\n        <Title>Episode id:</Title>\n        <Value>{episode_id}</Value>\n      </Row>\n\n      <Row>\n        <Title>Opening crawl:</Title>\n        <Value>{opening_crawl}</Value>\n      </Row>\n\n      <Row>\n        <Title>Release date:</Title>\n        <Value>{release_date}</Value>\n      </Row>\n\n      <Row>\n        <Title>Characters:</Title>\n        <Value>\n          <Links data={characters} />\n        </Value>\n      </Row>\n\n      <Row>\n        <Title>Planets:</Title>\n        <Value>\n          <Links data={planets} />\n        </Value>\n      </Row>\n\n      <Row>\n        <Title>Species:</Title>\n        <Value>\n          <Links data={species} />\n        </Value>\n      </Row>\n\n      <Row>\n        <Title>Starships:</Title>\n        <Value>\n          <Links data={starships} />\n        </Value>\n      </Row>\n\n      <Row>\n        <Title>Vehicles:</Title>\n        <Value>\n          <Links data={vehicles} />\n        </Value>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Films;\n","/* eslint-disable import/prefer-default-export */\nexport const getId = string => (string ? string.match(/\\d+/)[0] : null);\n","import { createStore, createEffect, createEvent } from 'effector';\n\nimport dal from '../dal';\nimport { getId } from '../helpers';\n\nimport { $entityType } from './entityTypeModel';\n\nexport const $entityList = createStore([]);\nexport const $isLoadingEntityList = createStore(true);\nexport const $nextPage = createStore(null);\nexport const $prevPage = createStore(null);\n\nexport const fetchEntityList = createEvent();\nexport const changePage = createEvent();\nexport const resetStore = createEvent();\n\nconst _fetchEntityList = createEffect();\n\n_fetchEntityList.use((page) => {\n  const entityType = $entityType.getState();\n\n  return dal\n    .getEntityList(entityType, page)\n    .then((response) => {\n      const { data: { results, next, previous } } = response;\n\n      const list = results.map(el => ({\n        id: getId(el.url),\n        name: el.name || el.title,\n      }));\n\n      return {\n        list,\n        next: getId(next),\n        prev: getId(previous),\n      };\n    });\n});\n\nfetchEntityList\n  .watch(() => _fetchEntityList());\n\nchangePage\n  .watch(page => _fetchEntityList(page));\n\n$entityList\n  .on(_fetchEntityList.done, (_, { result }) => [...result.list]);\n\n$nextPage\n  .on(_fetchEntityList.done, (_, { result }) => result.next);\n\n$prevPage\n  .on(_fetchEntityList.done, (_, { result }) => result.prev);\n\n$isLoadingEntityList\n  .on(_fetchEntityList, () => true)\n  .on(_fetchEntityList.done, () => false)\n  .on(_fetchEntityList.fail, () => false)\n  .reset(resetStore);\n","export const entities = [\n  'films',\n  'people',\n  'planets',\n  'species',\n  'starships',\n  'vehicles',\n];\n\nexport const entityKeys = {\n  films: 'films',\n  people: 'people',\n  planets: 'planets',\n  species: 'species',\n  starships: 'starships',\n  vehicles: 'vehicles',\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Loader = () => <Container>Loading...</Container>;\n\nexport default Loader;\n\nconst Container = styled.div`\n  width: 100%;\n  height: calc(100vh - 60px);\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  font-size: 20px;\n  font-weight: 900;\n  text-align: center;\n`;\n","import React, { useEffect } from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { entities } from '../../constants';\n\nimport { setEntityType } from '../../model/entityTypeModel';\n\nconst Header = (props) => {\n  const { location } = props;\n  const { pathname } = location;\n\n  useEffect(() => {\n    const entityType = pathname.split('/')[1];\n    setEntityType(entityType);\n  }, [pathname]);\n\n  return (\n    <List>\n      {\n        entities.map(item => (\n          <NavLinkWrap\n            key={item}\n            to={`/${item}`}\n            activeClassName=\"active\"\n          >\n            {item}\n          </NavLinkWrap>\n        ))\n      }\n    </List>\n  );\n};\n\nexport default withRouter(Header);\n\nconst List = styled.div`\n  display: flex;\n  justify-content: center;\n\n  background-color: black;\n`;\n\nconst NavLinkWrap = styled(NavLink)`\n  padding: 20px 35px;\n\n  color: white;\n  text-transform: uppercase;\n  text-decoration: none;\n  font-weight: 900;\n  line-height: 20px;\n\n  :hover {\n    background-color: blue;\n  }\n`;\n","import React, { useEffect, Fragment } from 'react';\nimport { useStore } from 'effector-react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {\n  $isLoadingEntityList,\n  $entityList,\n  $nextPage,\n  $prevPage,\n\n  fetchEntityList,\n  changePage,\n  resetStore,\n} from '../../model/entityListModel';\n\nimport Pagination from '../Pagination';\nimport Loader from '../common/Loader';\n\nconst EntityList = ({ location }) => {\n  const { pathname } = location;\n  const entityList = useStore($entityList);\n  const isLoadingEntityList = useStore($isLoadingEntityList);\n  const nextPage = useStore($nextPage);\n  const prevPage = useStore($prevPage);\n\n  useEffect(() => {\n    fetchEntityList();\n\n    return () => resetStore();\n  }, []);\n\n  return (\n    <Container>\n      <List>\n        {\n          isLoadingEntityList\n            ? <Loader />\n            : (\n              <Fragment>\n                {\n                  entityList.map(\n                    entity => (\n                      <Item key={entity.id}>\n                        <Link to={`${pathname}/${entity.id}`}>{entity.name}</Link>\n                      </Item>\n                    ),\n                  )\n                }\n\n                <Pagination\n                  nextPage={nextPage}\n                  prevPage={prevPage}\n                  changePage={changePage}\n                />\n              </Fragment>\n            )\n        }\n      </List>\n    </Container>\n  );\n};\n\nexport default EntityList;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-content: center;\n  align-items: center;\n\n  text-align: center;\n`;\n\nconst List = styled.div`\n  width: 100%;\n`;\n\nconst Item = styled.div`\n  padding: 20px;\n  border-bottom: 1px solid black;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Pagination = (props) => {\n  const { changePage, nextPage, prevPage } = props;\n\n  return (\n    <Container>\n      <Button\n        type=\"button\"\n        onClick={() => changePage(prevPage)}\n        disabled={!prevPage}\n      >\n        Prev Page\n      </Button>\n\n      <Button\n        type=\"button\"\n        onClick={() => changePage(nextPage)}\n        disabled={!nextPage}\n      >\n        Next Page\n      </Button>\n    </Container>\n  );\n};\n\nexport default Pagination;\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n\n  padding: 20px;\n`;\n\nconst Button = styled.button`\n  padding: 10px 20px;\n\n  color: white;\n  text-transform: uppercase;\n  text-decoration: none;\n  font-weight: 900;\n  line-height: 16px;\n\n  background-color: black;\n\n  :hover {\n    background-color: blue;\n    cursor: pointer;\n  }\n\n  :disabled {\n    background-color: grey;\n  }\n`;\n","import React, { useEffect, Fragment } from 'react';\nimport { useStore } from 'effector-react';\n\nimport {\n  $entity,\n  $isLoadingEntity,\n\n  fetchEntity,\n  resetStore,\n} from '../../model/entityModel';\nimport { $entityType } from '../../model/entityTypeModel';\n\nimport Loader from '../common/Loader';\nimport templates from '../Templates/index';\n\nconst Entity = (props) => {\n  const { match: { params: { id } } } = props;\n  const entity = useStore($entity);\n  const entityType = useStore($entityType);\n  const isLoadingEntity = useStore($isLoadingEntity);\n\n  useEffect(() => {\n    fetchEntity(id);\n\n    return () => resetStore();\n  }, []);\n\n  return (\n    <Fragment>\n      {\n        isLoadingEntity\n          ? <Loader />\n          : templates[entityType].getTemplate(entity)\n      }\n    </Fragment>\n  );\n};\n\nexport default Entity;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM\n  .render(<App />, document.getElementById('root'));\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport isEmpty from 'lodash/isEmpty';\nimport uniqueId from 'lodash/uniqueId';\nimport styled from 'styled-components';\n\nexport const Links = ({ data }) => {\n  const filmsContent = data.map((element) => {\n    const entityType = element.url.split('/')[4];\n    const id = element.url.split('/')[5];\n\n    return (\n      <div key={uniqueId()}>\n        <Link to={`/${entityType}/${id}`}>{element.title || element.name}</Link>\n      </div>\n    );\n  });\n\n  return !isEmpty(filmsContent) ? filmsContent : '-';\n};\n\nexport const Container = styled.div`\n  padding: 20px;\n\n  border: 1px solid black;\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  justify-content: center;\n\n  border-bottom: 1px solid black;\n`;\n\nexport const Title = styled.div`\n  width: 300px;\n  padding: 5px;\n\n  text-align: left;\n  font-weight: 900;\n  font-style: italic;\n`;\n\nexport const Value = styled.div`\n  width: 500px;\n  padding: 5px;\n`;\n","import React from 'react';\nimport uniqueId from 'lodash/uniqueId';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport {\n  HashRouter as Router, Route, Switch, Redirect,\n} from 'react-router-dom';\n\nimport Header from './components/Header';\nimport EntityList from './components/EntityList';\nimport Entity from './components/Entity';\n\nimport { entities } from './constants';\n\nconst App = () => (\n  <MainContainer>\n    <Router>\n      <Header />\n\n      <MainContent>\n        <Switch>\n          {\n            entities.map(entity => (\n              <Route\n                key={entity}\n                path={`/${entity}`}\n                component={EntityList}\n                exact\n              />\n            ))\n          }\n\n          {\n            entities.map(entity => (\n              <Route\n                key={uniqueId()}\n                path={`/${entity}/:id`}\n                component={Entity}\n              />\n            ))\n          }\n\n          <Redirect exact from=\"/\" to=\"/people\" />\n        </Switch>\n      </MainContent>\n\n    </Router>\n    <GlobalStyle />\n  </MainContainer>\n);\n\nexport default App;\n\nconst GlobalStyle = createGlobalStyle`\n  body, ul {\n    margin: 0;\n    padding: 0;\n  }\n\n  body {\n    font-family: Geneva, Arial, Helvetica, sans-serif;\n  }\n\n  .active {\n    color: yellow;\n  }\n`;\n\nconst MainContainer = styled.div`\n  width: 900px;\n  height: 100vh;\n  margin: 0 auto;\n`;\n\nconst MainContent = styled.div`\n  height: calc(100vh - 60px);\n`;\n","import Header from './Header';\n\nexport default Header;\n","import EntityList from './EntityList';\n\nexport default EntityList;\n","import { createStore, createEvent } from 'effector';\n\nexport const $entityType = createStore('');\n\nexport const setEntityType = createEvent();\n\n$entityType\n  .on(setEntityType, (_, entityType) => entityType);\n","import axios from 'axios';\n\nconst URL = 'https://swapi.co/api';\n\nconst getEntityList = (entityType, page) => axios.get(`${URL}/${entityType}/`, { params: { page } });\nconst getEntityById = (entityType, id) => axios.get(`${URL}/${entityType}/${id}`);\nconst getEntityByUrl = url => axios.get(url);\n\nexport default {\n  getEntityList,\n  getEntityById,\n  getEntityByUrl,\n};\n","import Pagination from './Pagination';\n\nexport default Pagination;\n","import Entity from './Entity';\n\nexport default Entity;\n","import { createStore, createEffect, createEvent } from 'effector';\nimport isArray from 'lodash/isArray';\nimport isEmpty from 'lodash/isEmpty';\n\nimport dal from '../dal';\nimport { entityKeys } from '../constants';\n\nimport { $entityType } from './entityTypeModel';\n\nexport const $entity = createStore({});\nexport const $isLoadingEntity = createStore(true);\n\nexport const fetchEntity = createEvent();\nexport const resetStore = createEvent();\n\nconst _fetchEntity = createEffect();\n\n_fetchEntity.use((id) => {\n  const entityType = $entityType.getState();\n  let entity = null;\n  let propsWithDeficiencyData = null;\n\n  return dal\n    .getEntityById(entityType, id)\n    .then(response => response.data)\n    .then((response) => {\n      entity = response;\n      const requests = [];\n\n      propsWithDeficiencyData = Object\n        .keys(response)\n        .filter(key => isArray(response[key]) && !isEmpty(response[key]));\n\n      propsWithDeficiencyData\n        .forEach(key => response[key].map(url => requests.push(dal.getEntityByUrl(url))));\n\n      if (\n        (entityType === entityKeys.people || entityType === entityKeys.species) && entity.homeworld\n      ) {\n        requests.push(dal.getEntityByUrl(entity.homeworld));\n        propsWithDeficiencyData.push('homeworld');\n      }\n\n      return Promise.all(requests);\n    })\n    .then(responses => responses.map(response => response.data))\n    .then((response) => {\n      const rest = {};\n\n      propsWithDeficiencyData.forEach((prop) => {\n        rest[prop] = [];\n\n        if (entityType === entityKeys.films) {\n          rest.characters = [];\n        }\n        if (entityType === entityKeys.people || entityType === entityKeys.species) {\n          rest.homeworld = [];\n        }\n      });\n\n      response.forEach((res) => {\n        propsWithDeficiencyData.forEach((prop) => {\n          const type = res.url.split('/')[4];\n          if (type === prop) {\n            rest[prop].push(res);\n          }\n\n          if (type === entityKeys.people && prop === 'characters') {\n            rest.characters.push(res);\n          }\n\n          if (type === entityKeys.planets && prop === 'homeworld') {\n            rest.homeworld.push(res);\n          }\n        });\n      });\n\n      return Object.assign(entity, rest);\n    });\n});\n\nfetchEntity\n  .watch(id => _fetchEntity(id));\n\n$entity\n  .on(_fetchEntity.done, (_, { result }) => result)\n  .reset(resetStore);\n\n$isLoadingEntity\n  .on(_fetchEntity, () => true)\n  .on(_fetchEntity.done, () => false)\n  .on(_fetchEntity.fail, () => false)\n  .reset(resetStore);\n"],"sourceRoot":""}